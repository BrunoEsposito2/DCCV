version: '3.8'

services:
  # CameraNode
  cameranode:
    build:
      context: ../
      dockerfile: distribution/cameranode/Dockerfile
    privileged: true
    container_name: cameranode
    command: /bin/bash -c "/DCCV/entrypoint.sh" 
    ports:
      - "2553:2553"
      - "5555:5555"
      - "8080:8080"
    environment:
      - JOIN_TOKEN=${JOIN_TOKEN}
      - MANAGER_IP=${MANAGER_IP}
    volumes:
      - cameranode-certs:/certs
    networks:
      - swarm-network
    restart: unless-stopped 

  # UserNode (Frontend + Backend)
  guifrontend:
    build:
      context: ../interface/client/
      dockerfile: Dockerfile
    privileged: true
    ports:
      - "3000:3000"
    environment:
      - JOIN_TOKEN=${JOIN_TOKEN}
      - MANAGER_IP=${MANAGER_IP}
      - DOCKER_TLS_CERTDIR=/certs
      - DOCKER_HOST=unix:///var/run/docker.sock
      - REACT_APP_API_BASE_URL=http://localhost:4000
      - REACT_APP_VIDEO_WS_URL=ws://localhost:5555
    volumes:
      - guifrontend-certs:/certs
      - guifrontend-data:/var/lib/docker
    networks:
      - swarm-network
    restart: unless-stopped 

  guibackend:
    build:
      context: ../
      dockerfile: distribution/usernode/Dockerfile
    privileged: true
    container_name: guibackend
    command: /bin/bash -c "/DCCV/entrypoint.sh" 
    ports:
      - "2551:2551"
      - "4000:4000"
    environment:
      - JOIN_TOKEN=${JOIN_TOKEN}
      - MANAGER_IP=${MANAGER_IP}
    volumes:
      - guibackend-certs:/certs
    networks:
      - swarm-network
    restart: unless-stopped 

  # UtilityNode (+ MongoDB)
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: APP-USERNAME
      MONGO_INITDB_ROOT_PASSWORD: APP-PASSWORD
      MONGO_INITDB_DATABASE: DCCV
      DOCKER_TLS_VERIFY: "0"
    volumes:
      - mongo:/data/db
      - ./utilitynode/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - swarm-network
    restart: unless-stopped 

  utilitynode:
    build:
      context: ../
      dockerfile: distribution/utilitynode/Dockerfile
    privileged: true
    container_name: utilitynode
    command: /bin/bash -c "/DCCV/entrypoint.sh" 
    ports:
      - "2552:2552"
    environment:
      - JOIN_TOKEN=${JOIN_TOKEN}
      - MANAGER_IP=${MANAGER_IP}
      - DATABASE_URI=mongodb://APP-USERNAME:APP-PASSWORD@mongodb:27017/DCCV
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - swarm-network
    depends_on:
      - mongodb
    volumes:
      - utility-certs:/certs
    restart: unless-stopped

networks:
  swarm-network:
    # driver: overlay
    # attachable: true
    external: true

volumes:
  guifrontend-certs:
  guifrontend-data:
  guibackend-certs:
  utility-certs:
  cameranode-certs:
  mongo: