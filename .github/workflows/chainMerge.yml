name: Chain Merge and Test Workflow

on:
  push:
    branches:
      - 'domain'
      - 'application'
      - 'presentation'
      - 'storage'
      - 'interface'
      - 'distribution'

jobs:
  chain-merge-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4.1.5
      if: inputs.token == ''
      with:
        fetch-depth: 0
        submodules: recursive
        token: ${{ secrets.DCCV_TOKEN }}

    - name: Configure git
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'

        echo "Git configuration:"
        git config --list

    - name: Fetch all branches
      run: git fetch --all

    - name: Determine next branch
      id: determine-next
      run: |
        current_branch="${GITHUB_REF#refs/heads/}"
        echo "Current branch: $current_branch"

        declare -A branches
        branches=( ["domain"]="application" ["application"]="presentation" ["presentation"]="storage" ["storage"]="interface" ["interface"]="distribution" ["distribution"]="")

        next_branch="${branches[$current_branch]}"
        echo "Next branch: $next_branch"

        echo "::set-output name=next_branch::$next_branch"

    - name: Set up JDK 17
      if: ${{ steps.determine-next.outputs.next_branch != '' }}
      uses: actions/setup-java@v3
      with:
        distribution: 'corretto'
        java-version: '17'

    - name: Set execute permissions for Gradle wrapper
      run: chmod +x ./gradlew
      
    - name: Run Gradle tests
      if: ${{ steps.determine-next.outputs.next_branch != '' }}
      run: |
        subproject="${GITHUB_REF#refs/heads/}"
        ./gradlew ${subproject}:test

    - name: Push changes to next branch if tests pass
      if: ${{ success() && steps.determine-next.outputs.next_branch != '' }}
      run: |
        current_branch="${GITHUB_REF#refs/heads/}"
        next_branch="${{ steps.determine-next.outputs.next_branch }}"
        echo "Tests passed. Merging $current_branch into $next_branch"

        # Checkout the next branch again to ensure it's up to date
        git checkout $next_branch

        # Merge the current branch into it again to ensure it's up to date
        git merge $current_branch
        
        # Push the changes to the next branch
        git push origin $next_branch
